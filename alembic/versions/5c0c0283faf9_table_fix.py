"""table fix

Revision ID: 5c0c0283faf9
Revises: 24075597bfcd
Create Date: 2024-11-07 22:17:07.541641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5c0c0283faf9'
down_revision: Union[str, None] = '24075597bfcd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cloning_jobs', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('cloning_jobs', sa.Column('task_id', sa.String(), nullable=True))
    op.add_column('cloning_jobs', sa.Column('queue', sa.String(), nullable=True))
    op.add_column('cloning_jobs', sa.Column('error_message', sa.String(), nullable=True))
    op.alter_column('cloning_jobs', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='processingstatus'),
               nullable=True)
    op.alter_column('cloning_jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('cloning_jobs', 'completed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.create_index(op.f('ix_cloning_jobs_id'), 'cloning_jobs', ['id'], unique=False)
    op.add_column('translation_jobs', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('translation_jobs', sa.Column('task_id', sa.String(), nullable=True))
    op.add_column('translation_jobs', sa.Column('queue', sa.String(), nullable=True))
    op.add_column('translation_jobs', sa.Column('error_message', sa.String(), nullable=True))
    op.alter_column('translation_jobs', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='processingstatus'),
               nullable=True)
    op.alter_column('translation_jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('translation_jobs', 'completed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.create_index(op.f('ix_translation_jobs_id'), 'translation_jobs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_translation_jobs_id'), table_name='translation_jobs')
    op.alter_column('translation_jobs', 'completed_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('translation_jobs', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('translation_jobs', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='processingstatus'),
               nullable=False)
    op.drop_column('translation_jobs', 'error_message')
    op.drop_column('translation_jobs', 'queue')
    op.drop_column('translation_jobs', 'task_id')
    op.drop_column('translation_jobs', 'updated_at')
    op.drop_index(op.f('ix_cloning_jobs_id'), table_name='cloning_jobs')
    op.alter_column('cloning_jobs', 'completed_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('cloning_jobs', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('cloning_jobs', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='processingstatus'),
               nullable=False)
    op.drop_column('cloning_jobs', 'error_message')
    op.drop_column('cloning_jobs', 'queue')
    op.drop_column('cloning_jobs', 'task_id')
    op.drop_column('cloning_jobs', 'updated_at')
    # ### end Alembic commands ###
